<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKIAAABCCAYAAADUtg2ZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAADhSURBVHhe7dJBDcQwEARBw12jDZRAuJNDwv2okkYaAL1m
        5tl7/8xu7TS4zllw0degELlNiCQIkQQhkiBEEoRIghBJECIJQiRBiCQIkQQhkiBEEoRIghBJECIJQiRB
        iCQIkQQhkiBEEoRIghBJECIJQiRBiCQIkQQhkiBEEoRIghBJECIJQiRBiCQIkQQhkiBEEoRIghBJECIJ
        QiRBiCQIkQQhkiBEEoRIghBJECIJQiRBiCQIkQQhkiBEEoRIghBJECIJQiRBiCQIkQQhkiBEEoRIghBJ
        +Bqcmfccs1ubmfcPHnDuClppOgcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B/zgAD/8+AD//A==
</value>
  </data>
</root>